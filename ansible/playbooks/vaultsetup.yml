---
# TODO: currently it only works with verify==False.
# TODO: It should be made possible to specify the CA for the self signed SSL cert used by VAULT
- hosts: controller
  vars:
    vault_cacert: "/etc/ssl/certs/cluster-ca.pem"
  environment:
    VAULT_ADDR: https://192.168.56.21:8200
    VAULT_CAPATH: /etc/ssl/certs
    VAULT_CACERT: /etc/ssl/certs/cluster-ca.pem

  tasks:
  - name: "Ensure /etc/vault exists"
    become: yes
    file:
      path: "/etc/vault"
      state: directory

  - name: "register vault status"
    hashivault_status:
      ca_cert: "{{vault_cacert}}"
    ignore_errors: True
    register: vault_status

  - name: "debug"
    debug:
      var: vault_status

  - name: "initialize vault"
    block:
    - name: "init vault"
      hashivault_init:
        ca_cert: "{{vault_cacert}}"
      register: vault_init
    - name: "backup keys"
      become: True
      copy:
        content: "{{vault_init | to_json}}"
        dest: "/etc/vault/keys.json"
    when: vault_status|failed

  - name: "read keys"
    block:
    - name: "lookup keys"
      slurp:
        src: /etc/vault/keys.json
      register: vault_keys
    - set_fact:
        vault_init: "{{vault_keys['content'] | b64decode }}"
    when: vault_status|succeeded

  - name: "keys"
    debug:
      msg: "{{vault_keys}}"

  - name: "register vault status"
    hashivault_status:
      ca_cert: "{{vault_cacert}}"
    ignore_errors: True
    register: vault_status

  - name: "unseal vault"
    block:
      - hashivault_unseal:
          keys: "{{vault_init.keys_base64 | join(' ')}}"
          verify: False
    when: vault_status.status.sealed

  - name: "set nomad server policy"
    hashivault_policy_set:
      ca_cert: "{{vault_cacert}}"
      name: nomad_server
      rules: "{{ lookup('file', 'nomad-server-policy.hcl')}}"
      token: "{{vault_init.root_token}}"
    register: vault_policy_set

  - name: "set nomad cluster role"
    hashivault_write:
      ca_cert: "{{vault_cacert}}"
      secret: /auth/token/roles/nomad-cluster
      data: "{{ lookup('file', 'nomad-cluster-role.json')}}"
      token: "{{vault_init.root_token}}"
    register: vault_role_set


#
# This token is used to allow nomad access to vault secrets.
# This references the nomad server policy (nomad_server) defined above
#
  - name: "lookup token"
    hashivault_token_lookup:
      lookup_token: "{{vault_init.root_token}}"
      token: "{{vault_init.root_token}}"
    register: vault_nomad_token

  - debug:
      msg: "{{vault_nomad_token}}"
  - name: "create vault nomad token"
    hashivault_token_create:
      ca_cert: "{{vault_cacert}}"
      display_name: "nomad"
      policies:
      - nomad_server
      renewable: True
      ttl: "72h"
      orphan: True
      token: "{{vault_init.root_token}}"
    register: vault_nomad_token

  - debug:
      var: vault_nomad_token

  - name: "save vault_nomad_token"
    become: True
    copy:
      content: "{{vault_nomad_token.token | to_json}}"
      dest: "/etc/vault/nomad_token.json"
    when: vault_nomad_token|changed
